/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.HoaDonDAO;
import DAO.ThongKeDao;
import Entity.HoaDon;
import java.util.List;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import utils.MsgBox;
import DAO.NhanVienDAO;
import DAO.VaiTroDAO;
import Entity.NhanVien;
import Entity.VaiTro;
import java.util.ArrayList;

/**
 *
 * @author Admin
 */
public class ThongKe extends javax.swing.JPanel {

    /**
     * Creates new form ThongKe
     */
    public ThongKe() {
        initComponents();
        ComboBoxNam();
        ComboBoxThang();
        jDateChooser1.setDate(utils.XDate.now());
        listt = daovt.selecALL();
        list = daonv.selecALL();
    }
    int index2 = -1;
    private int indexx;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cboNamThang = new javax.swing.JComboBox<>();
        cboNam = new javax.swing.JComboBox<>();
        cboThang = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblThongKe = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cboLoaiTK = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Thống kê doanh thu"));

        cboNamThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Năm", "Tháng", " " }));
        cboNamThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamThangActionPerformed(evt);
            }
        });

        cboNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamActionPerformed(evt);
            }
        });

        cboThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThangActionPerformed(evt);
            }
        });

        tblThongKe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblThongKe);

        jLabel1.setText("Hình thức thống kê");

        jLabel2.setText("Năm");

        jLabel3.setText("Tháng");

        jLabel4.setText("Loại Thống Kê");

        cboLoaiTK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doanh Thu", "Loại sách bán chạy", "Sách bán chạy " }));
        cboLoaiTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiTKActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Gửi báo cáo"));

        jDateChooser1.setDateFormatString("dd-MM-yyyy");
        jDateChooser1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jDateChooser1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jButton1.setText("Gửi Thống Kê");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(cboLoaiTK, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cboNamThang, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(8, 8, 8)
                .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(cboNamThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(cboLoaiTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1134, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents
    ThongKeDao dao = new ThongKeDao();
    HoaDonDAO hddao = new HoaDonDAO();
    private NhanVienDAO daonv = new NhanVienDAO();
    private VaiTroDAO daovt = new VaiTroDAO();
    private List<NhanVien> list = new ArrayList<>();
    private List<VaiTro> listt = new ArrayList<>();
    private DefaultTableModel model = new DefaultTableModel();

    private void cboNamThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamThangActionPerformed
        try {
            int index = cboNamThang.getSelectedIndex();

            if (index2 == 0) {
                if (index == 0) {
                    DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
                    model.setColumnCount(0);
                    model.addColumn("Năm ");
                    model.addColumn("Số lượng sách đã bán ");
                    model.addColumn("Tổng tiền ");
                    fillTableNam();
                    cboThang.disable();
                }
                if (index == 1) {
                    DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
                    model.setColumnCount(0);
                    model.addColumn("Tháng");
                    model.addColumn("Số lượng sách đã bán ");
                    model.addColumn("Tổng tiền");
                    cboThang.enable();
                }
            }
            if (index2 == 1) {
                if (index == 0) {
                    DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
                    model.setColumnCount(0);
                    model.addColumn("Năm ");
                    model.addColumn("Thể Loại ");
                    model.addColumn("Số lượng Sách bán ");
                    model.addColumn("Tổng tiền");
                    fillTableNamSLSP();
                    cboThang.disable();
                }
                if (index == 1) {
                    DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
                    model.setColumnCount(0);
                    model.addColumn("Tháng ");
                    model.addColumn("Thể Loại ");
                    model.addColumn("Số lượng Sách bán ");
                    model.addColumn("Tổng tiền");
                    cboThang.enable();
                }
            }
            if (index2 == 2) {
                if (index == 0) {
                    DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
                    model.setColumnCount(0);
                    model.addColumn("Năm ");
                    model.addColumn("Tên sách ");
                    model.addColumn("Số lượng Sách bán ");
                    model.addColumn("Tổng tiền");
                    fillTableNamSBC();
                    cboThang.disable();
                }
                if (index == 1) {
                    DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
                    model.setColumnCount(0);
                    model.addColumn("Tháng ");
                    model.addColumn("Tên sách ");
                    model.addColumn("Số lượng Sách bán ");
                    model.addColumn("Tổng tiền");
                    cboThang.enable();
                }
            }

        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi table");
        }
    }//GEN-LAST:event_cboNamThangActionPerformed

    private void cboNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamActionPerformed
        String iteam = (String) cboNamThang.getSelectedItem();
        if (index2 == 0 && iteam.equals("Năm")) {
            DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
            model.setRowCount(0);
            int nam = (Integer) cboNam.getSelectedItem();
            List<Object[]> list = dao.getHoaDonNam1(nam);
            for (Object[] row : list) {
                model.addRow(row);
            }
        } else if (index2 == 0 && iteam.equals("Tháng")) {
            DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
            model.setRowCount(0);
            int nam = (Integer) cboNam.getSelectedItem();
            List<Object[]> list = dao.getHoaDonThang(nam);
            for (Object[] row : list) {
                model.addRow(row);
            }
        }
        if (index2 == 1 && iteam.equals("Năm")) {
            DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
            model.setRowCount(0);
            int nam = (Integer) cboNam.getSelectedItem();
            List<Object[]> list = dao.getHoaDonNamSP1(nam);
            for (Object[] row : list) {
                model.addRow(row);
            }
        } else if (index2 == 1 && iteam.equals("Tháng")) {
            DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
            model.setRowCount(0);
            int nam = (Integer) cboNam.getSelectedItem();
            List<Object[]> list = dao.getHoaDonThangSP(nam);
            for (Object[] row : list) {
                model.addRow(row);
            }
        }
        if (index2 == 2 && iteam.equals("Năm")) {
            DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
            model.setRowCount(0);
            int nam = (Integer) cboNam.getSelectedItem();
            List<Object[]> list = dao.getHoaDonNamSBC1(nam);
            for (Object[] row : list) {
                model.addRow(row);
            }
        } else if (index2 == 2 && iteam.equals("Tháng")) {
            DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
            model.setRowCount(0);
            int nam = (Integer) cboNam.getSelectedItem();
            List<Object[]> list = dao.getHoaDonThangSBC2(nam);
            for (Object[] row : list) {
                model.addRow(row);
            }
        }
    }//GEN-LAST:event_cboNamActionPerformed

    private void cboThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThangActionPerformed
        index2 = cboLoaiTK.getSelectedIndex();
        if (index2 == 0) {

            fillTableThang();
        } else if (index2 == 1) {
            fillTableThangSLSP();
        } else if (index2 == 2) {
            fillTableThangSBC();
        }
    }//GEN-LAST:event_cboThangActionPerformed

    private void cboLoaiTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiTKActionPerformed
        index2 = cboLoaiTK.getSelectedIndex();
    }//GEN-LAST:event_cboLoaiTKActionPerformed

    private void jDateChooser1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jDateChooser1AncestorAdded

    }//GEN-LAST:event_jDateChooser1AncestorAdded

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String message = "";
            String host = "smtp.gmail.com";
            String user = "duanmot439@gmail.com";
            String pass = "duan12345";
            String to = "";

            String subject = "Thống kê doanh thu";

            boolean sessionDebug = false;
            Properties props = System.getProperties();
            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.host", "host");
            props.put("mail.smtp.port", "587");
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.required", "true");
            java.security.Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());
            Session mailSession = Session.getDefaultInstance(props, null);
            mailSession.setDebug(sessionDebug);
            Message msg = new MimeMessage(mailSession);
            msg.setFrom(new InternetAddress(user));
            msg.setSubject(subject);
            List<Object[]> list = dao.getHoaDonNGAY(jDateChooser1.getDate());
            for (Object[] row : list) {
                message = "Ngày: " + row[0] + " Tên: " + row[1] + " Số Lượng: " + row[2] + " Tổng Tiền: " + row[3] + " Ghi Chú: " + row[4] + "\n" + message;
            }
            msg.setText(message);
            for (VaiTro vt : listt) {
                if (vt.isVaiTro() == true) {
                    for (NhanVien nv : this.list) {
                        if (nv.getManv() == Integer.parseInt(vt.getManv())) {
                            to = nv.getEmail();
                            InternetAddress[] address = {new InternetAddress(to)};
                            msg.setRecipients(Message.RecipientType.TO, address);
                            Transport transport = mailSession.getTransport("smtp");
                            transport.connect(host, user, pass);
                            transport.sendMessage(msg, msg.getAllRecipients());
                            transport.close();
                        }
                    }
                }
            }

            MsgBox.alert(this, "Đã gửi email");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    void ComboBoxNam() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNam.getModel();
        model.removeAllElements();
        List<Integer> list = hddao.selectYears();
        for (Integer year : list) {
            model.addElement(year);
        }
    }

    void ComboBoxThang() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboThang.getModel();
        model.removeAllElements();
        List<Integer> list = hddao.selectMonth();
        for (Integer month : list) {
            model.addElement(month);
        }
    }

    void fillTableThang() {
        DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
        model.setRowCount(0);
        int nam = (Integer) cboNam.getSelectedItem();
        int thang = (Integer) cboThang.getSelectedItem();
        List<Object[]> list = dao.getHoaDonThang1(nam, thang);
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    void fillTableNam() {
        DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
        model.setRowCount(0);
        List<Object[]> list = dao.getHoaDonNam();
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    void fillTableNamSLSP() {
        DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
        model.setRowCount(0);
        List<Object[]> list = dao.getHoaDonNamSP();
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    void fillTableThangSLSP() {
        DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
        model.setRowCount(0);
        int nam = (Integer) cboNam.getSelectedItem();
        int thang = (Integer) cboThang.getSelectedItem();
        List<Object[]> list = dao.getHoaDonThangSP1(nam, thang);
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    void fillTableNamSBC() {
        DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
        model.setRowCount(0);
        List<Object[]> list = dao.getHoaDonNamSBC();
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    void fillTableThangSBC() {
        DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
        model.setRowCount(0);
        int nam = (Integer) cboNam.getSelectedItem();
        int thang = (Integer) cboThang.getSelectedItem();
        List<Object[]> list = dao.getHoaDonThangSBC3(nam, thang);
        for (Object[] row : list) {
            model.addRow(row);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboLoaiTK;
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JComboBox<String> cboNamThang;
    private javax.swing.JComboBox<String> cboThang;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblThongKe;
    // End of variables declaration//GEN-END:variables
}
